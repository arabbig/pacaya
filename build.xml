<?xml version="1.0"?>
<project name="dep_parse" default="compile" basedir=".">

  <property name="classes.path"     value="${basedir}/classes" />
  <property name="source.path"    value="${basedir}/src" />
  <property name="test.path"    value="${basedir}/tests" />
  <property name="test.raw.path"    value="${test.path}/raw-test-output" />
  <property name="test.reports.path"    value="${test.path}/test-reports" />
  <property name="classes.path"     value="${basedir}/build" />
  <property name="app.jar.path"     value="${classes.path}/prunner.jar" />
  <property name="mega.jar.path"     value="${classes.path}/mega.jar" />
  <property name="gcj.path"     value="${classes.path}/PipelineRunner" />

  <property name="compile.debug"       value="true"/>
  <property name="compile.deprecation" value="false"/>
  <property name="compile.optimize"    value="true"/>
  <property name="compile.source"      value="1.6" />
  <property name="compile.target"      value="1.6" />
  <property name="compile.encoding"    value="utf-8" />

  <target name="classpath" description="Sets the classpath">
    <echo message="${ant.project.name}" />
    <path id="classpath">
      <pathelement path="/home/hltcoe/mgormley/working/tagging/bin/gurobi301/linux64/lib/gurobi.jar" />
      <pathelement path="/home/hltcoe/mgormley/installed/ILOG/CPLEX_Studio_AcademicResearch122/cplex/lib/cplex.jar" />
      <fileset dir="${basedir}/lib">
        <include name="*.jar"/>
      </fileset>
    </path>
    <property name="myclasspath" refid="classpath"/>
    <echo message="Classpath = ${myclasspath}"/>
    <path id="classes">
      <pathelement location="${classes.path}" />
    </path>
  </target>

  <target name="clean" description="Delete old classes">
    <echo message="${ant.project.name}" />
    <delete includeemptydirs="true" failonerror="false">
      <fileset dir="${classes.path}/" includes="**/*"/>
      <fileset dir="${classes.path}/" includes="**/*"/>
      <fileset dir="${test.path}"/>
    </delete>
  </target>

  <target name="build-dir" description="Create build output directories">
    <mkdir dir="${classes.path}" />
    <mkdir dir="${classes.path}" />
  </target>

  <target name="resources" description="Copy resources to build output directory">
    <mkdir dir="${classes.path}/edu/jhu/hltcoe/parse" />
    <copy todir="${classes.path}/edu/jhu/hltcoe/parse">
      <fileset dir="${source.path}/edu/jhu/hltcoe/parse">
    	<include name="*.xml"/>
      </fileset>
    </copy>
    <mkdir dir="${classes.path}/edu/jhu/hltcoe/ilp/decomp" />
    <copy todir="${classes.path}/edu/jhu/hltcoe/ilp/decomp">
      <fileset dir="${source.path}/edu/jhu/hltcoe/ilp/decomp">
    	<include name="*.parm"/>
      </fileset>
    </copy>
    <copy todir="${classes.path}">
      <fileset dir="${source.path}">
    	<include name="*.properties"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile" depends="classpath,build-dir,resources"
          description="Compile core sources">
    <echo message="${ant.project.name}" />
    <javac srcdir="${source.path}"
           destdir="${classes.path}"
           debug="${compile.debug}"
           encoding="utf-8" 
	   deprecation="${compile.deprecation}"
           optimize="${compile.optimize}"
           source="${compile.source}"
           target="${compile.target}"
	   includeantruntime="false">
      <classpath refid="classpath" />
      <compilerarg value="-Xlint:cast"/>
      <compilerarg value="-Xlint:finally"/>
      <compilerarg value="-Xlint:path"/>
    </javac>
  </target>

  <target name="gcj-app" depends="compile">
    <jar destfile="${app.jar.path}">
      <fileset dir="${classes.path}" excludes="**/*Test*.class"/> 
    </jar>
    <property name="myclasspath" refid="classpath"/>
    <exec executable="echo">
      <arg line="-g --main=edu.jhu.hltcoe.sp.PipelineRunner --CLASSPATH=${myclasspath} -o ${gcj.path}.app ${app.jar.path}"/>
    </exec>
  </target>

  <target name="gcj-mega" depends="compile">
    <!-- This nested restrict doesn't work for older versions of ant -->
    <jar destfile="${mega.jar.path}">
      <fileset dir="${classes.path}"/>
      
      <restrict>
	<name name="**/*.class"/>
	<archives>
	  <zips>
	    <fileset dir="${basedir}/lib">
	      <include name="*.jar"/>
	    </fileset>
	  </zips>
	</archives>
      </restrict>
      <manifest>
	<attribute name="Main-Class"
		   value="edu.jhu.hltcoe.sp.PipelineRunner"/>
      </manifest>
    </jar> 
    <exec executable="gcj">
      <arg line="-g --main=edu.jhu.hltcoe.sp.PipelineRunner -o ${gcj.path}.mega ${mega.jar.path}"/>
    </exec>
  </target>

  <target name="junit" depends="compile"
	  description="Run JUnit tests">
    <mkdir dir="${test.raw.path}"/>
    <mkdir dir="${test.reports.path}"/>
    <junit printsummary="yes" failureproperty="junit.failure">
      <classpath>
        <path refid="classpath"/>
        <path refid="classes"/>
      </classpath>
      <batchtest todir="${test.raw.path}">
        <fileset dir="${source.path}" includes="**/*Test.java"/>
	<formatter type="xml"/>
      </batchtest>
    </junit>
    <junitreport todir="${test.path}">
      <fileset dir="${test.raw.path}"/>
      <report todir="${test.reports.path}"/>
    </junitreport>
    <fail if="junit.failure" message="Unit test(s) failed.  See reports!"/>
  </target>

  <target name="all" depends="clean,compile,junit"
          description="Clean and re-compile." />

</project>
